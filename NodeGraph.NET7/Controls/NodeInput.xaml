<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:NodeGraph.NET7.Converters"
                    xmlns:local="clr-namespace:NodeGraph.NET7.Controls">

    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    <converters:InverseBooleanToVisibilityConverter x:Key="InverseBooleanToVisibility"/>

    <Style TargetType="{x:Type local:NodeInputContent}">
        <Setter Property="Stroke" Value="Gray"/>
        <Setter Property="Fill" Value="Transparent"/>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="CanConnect" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Stroke" Value="Aqua"/>
            </MultiTrigger>
            
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Fill" Value="#55888888"/>
                <Setter Property="Stroke" Value="#55888888"/>
            </Trigger>

            <Trigger Property="IsConnected" Value="True">
                <Setter Property="Fill" Value="WhiteSmoke"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="__NodeInputContentTemplate__" TargetType="{x:Type local:NodeInputContent}">
        <Border Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}">
            <DockPanel>
                <DockPanel x:Name="__InputConnector__"
                           Background="#00FFFFFF" 
                           Tag="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:NodeInputContent}}}"
                           Visibility="{TemplateBinding CanConnect, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Ellipse x:Name="ConnectorShape1"
                             Width="{x:Static local:ControlSize.ConnectorSize}"
                             Height="{x:Static local:ControlSize.ConnectorSize}"
                             StrokeThickness="{TemplateBinding StrokeThickness}"
                             Stroke="{TemplateBinding Stroke}"
                             Fill="{TemplateBinding Fill}"
                             IsHitTestVisible="False"/>
                    <ContentPresenter Margin="4,2,0,0" VerticalAlignment="Center" IsHitTestVisible="False">
                        <ContentPresenter.Content>
                            <Path x:Name="ConnectorShape2"
                                  Fill="{TemplateBinding Fill}"
                                  Stroke="{TemplateBinding Stroke}"
                                  StrokeThickness="{TemplateBinding StrokeThickness}"
                                  Data="M 0,0 L 5,4.5 L 0,9 Z"/>
                        </ContentPresenter.Content>
                    </ContentPresenter>
                </DockPanel>

                <DockPanel Margin="4,0,0,0" HorizontalAlignment="Center">
                    <ContentPresenter VerticalAlignment="Center"
                                      IsHitTestVisible="False"
                                      Width="{Binding ActualWidth, ElementName=__InputConnector__}"
                                      Visibility="{TemplateBinding CanConnect, Converter={StaticResource InverseBooleanToVisibility}}">
                        <ContentPresenter.Content>
                            <Path Fill="Transparent"
                                  Stroke="Red"
                                  StrokeThickness="1"
                                  VerticalAlignment="Center"
                                  Data="M 0,0 L 11,0 L 11,11 L 0,11 Z M 0,0 L 0,0 L 11,11"/>
                        </ContentPresenter.Content>
                    </ContentPresenter>
                </DockPanel>

                <Label Content="{TemplateBinding Content}" Foreground="WhiteSmoke" VerticalAlignment="Center" VerticalContentAlignment="Center" Padding="{TemplateBinding Padding}"/>
            </DockPanel>
        </Border>

        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding IsMouseOver, ElementName=__InputConnector__}" Value="True">
                <Setter Property="Fill" Value="DarkCyan" TargetName="ConnectorShape1"/>
                <Setter Property="Fill" Value="DarkCyan" TargetName="ConnectorShape2"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type local:NodeInput}">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:NodeInput}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Canvas>
                            <Canvas x:Name="__NodeInputCanvas__"/>
                        </Canvas>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>